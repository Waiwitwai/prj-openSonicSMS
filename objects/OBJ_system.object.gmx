<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Start global variables</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// System

// Settings
global.screenSize = 0; //0 = Auto Size, 1 = Widescreen (16:9), 2 = Retro (4:3)
global.windowSize = 3; // Window size (multiplication) ex: 1x, 2x, 3x..
global.buttons = 1; // Show touch buttons (0 = off / 1 = on)
global.music = 1; // Play music (0 = off / 1 = on)
global.saveGame = 1; //Memory Card Slot
global.memoryCards = 5; //How many cards?

// Rotes
global.zoneGoto = 1; // Zone code
global.specialStageGoto = 1; // Special Stage code

// Unlocks
global.specialStage = false; // Go to Special Stage?
global.allZones = false; // Clear all zones?
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player

// Characters
global.player = 1; // 1 = Sonic / 2 = Tails / 3 = Knuckles

// Phisics
global.valGravity = 0; // Gravity
global.valSpeed = 0; // Speed you add when you walk
global.valSpeedMax = 0; // Speed limit
global.valJumpMax = 0; // Jump pressure
global.valVspeed = 0; // Drop limit
global.valSpinSpeed = 0; // Spin Dash Release Speed

// Object Physics
global.jumpSpringMax = 0; // Spring height limit
global.monitorJump = 0; // Jump height when you destroy the monitor

// Actions
global.playerBlink = false; // Lost rings invincibility
global.playerSuper = false; // If player is a Super 
global.playerWater = false; // If player is underwater
global.playerJump = false; // If player is jumping
global.playerJumpSpring = false; // If player is jumping in the spring
global.playerSpinDash = false; // If player Spin Dash is true
global.playerFly = false; // If player is flying
global.playerPlate = false; // If goal plate finish is true

// Sprites mode
global.playerSprite = 0; // Colors palette (0 = normal / 1 = underwater)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Level Objects

global.life = 3; // Player lifes
global.ring = 0; // Collected rings
global.chaoEmerald = 0; // Collected Chao Emeralds

// If you have the power ...
global.powerShield = false;
global.powerShieldMagnet = false;
global.powerShieldFlame = false;
global.powerInv = false;

global.checkPoint = false; // If you have caught...
global.checkPointX = 0; // Coordinate X to create the player
global.checkPointY = 0; // Coordinate Y to create the player

// Time
global.seconds = 0;
global.minutes = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Load data (memory card)</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Settings

// Open Archive
ini_open ("settings.ini");

// Load Varibles
global.screenSize = ini_read_real ("system", "screenSize", global.screenSize);
global.windowSize = ini_read_real ("system", "windowSize", global.windowSize);
global.buttons = ini_read_real ("system", "buttons", global.buttons);
global.music = ini_read_real ("system", "music", global.music);
global.saveGame = ini_read_real ("system", "saveGame", global.saveGame);

// Close Archive
ini_close ();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game Slots

// -------------------- Create Data -------------------- 

for (i = 0; i &lt; global.memoryCards; i++)
{
    // Open Archive
    ini_open ("saveGame" + string(i) + ".ini");
    
    // Create Sections
    if !(ini_section_exists("classicMode"))
    {
        ini_write_real ("classicMode", "life", global.life);
        ini_write_real ("classicMode", "chaoEmerald", global.chaoEmerald);
        ini_write_real ("classicMode", "zoneGoto", global.zoneGoto);
        ini_write_real ("classicMode", "specialStageGoto", global.specialStageGoto);
        ini_write_real ("classicMode", "allZones", global.allZones);
    }
    
    // Close Archive
    ini_close ();
}

// -------------------- Read Data -------------------- 

// Open Archive
ini_open ("saveGame" + string(global.saveGame) + ".ini");

// Load Varibles
global.life = ini_read_real ("classicMode", "life", global.life);
global.chaoEmerald = ini_read_real ("classicMode", "chaoEmerald", global.chaoEmerald);
global.zoneGoto = ini_read_real ("classicMode", "zoneGoto", global.zoneGoto);
global.specialStageGoto = ini_read_real ("classicMode", "specialStageGoto", global.specialStageGoto);
global.allZones = ini_read_real ("classicMode", "allZones", global.allZones);

// Close Archive
ini_close ();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
