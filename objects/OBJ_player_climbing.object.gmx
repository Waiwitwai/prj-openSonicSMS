<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SPR_player_mask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>OBJ_player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables

imgFrame = 0;
climb = false; // Up
fall = false; // Down
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Default values

// Physics
hspeed = 0;
vspeed = 0;
gravity = 0;

// Lost vulnerability
global.playerBlink = false;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sprites

SCR_player_sprites();

sprite_index = SPR_player_climbing;
image_alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Distance adjusments

if (image_xscale == 1)
{
    hspeed++;
}
if (image_xscale == -1)
{
    hspeed--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controls and Gravity

// Keyboard and Gamepads buttons map
SCR_buttons();

// Gravity
SCR_physics();

gravity = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Moves and Sprites

// ----------------- Moves -----------------

// UP
if (global.btUp &amp;&amp; !global.btDown)
{
    if (place_meeting(x, y+1, OBJ_collision_roof) || y &lt; 16 || 
        place_meeting(x, y+1, OBJ_collision_ramp_1_ghost) || 
        place_meeting(x, y+1, OBJ_collision_ramp_2_ghost))
    {
        vspeed = 0; // Max height
    }
    else
    {
        if (place_meeting(x+1, y, OBJ_collision_wall) || place_meeting(x-1, y, OBJ_collision_wall))
        {
            vspeed = -2;
            imgFrame -= 0.4;
        }
        else
        {
            vspeed = 0;
            climb = true;
        }
    }
}
if (global.btUpRel)
{
    vspeed = 0;
}

// DOWN
if (global.btDown &amp;&amp; !global.btUp)
{
    if (place_meeting(x+1, y, OBJ_collision_wall) || place_meeting(x-1, y, OBJ_collision_wall))
    {
        vspeed = 2;
        imgFrame += 0.4;
    }
    else
    {
        vspeed = 0;
        fall = true;
    }
}
if (global.btDownRel)
{
    vspeed = 0;
}


// ----------------- Sprites -----------------

SCR_player_sprites();

sprite_index = SPR_player_climbing;
image_index = round(imgFrame);
image_speed = 0;

// Control
if (imgFrame &gt; 3)
{
    imgFrame = 0;
}
if (imgFrame &lt; 0)
{
    imgFrame = 3;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Jump

if ((place_meeting(x+1, y, OBJ_collision_wall) &amp;&amp; place_meeting(x+1, y+25, OBJ_collision_floor_edge)) || //Collision --&gt;
    (place_meeting(x-1, y, OBJ_collision_wall) &amp;&amp; place_meeting(x-10, y+25, OBJ_collision_floor_edge)) || //Collision &lt;--
    climb == true) 
{
    global.playerFly = false;
    global.playerJump = true;
    
    vspeed = -global.valJumpMax/1.4;
    
    instance_change(OBJ_player_char, false);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fall down

if (global.btSpacePress || fall == true)
{
    global.playerFly = false;
    global.playerJump = true;
    
    // Invert position as fall down
    if (image_xscale == 1)
    {
        image_xscale = -1;
    }
    else if (image_xscale == -1)
    {
        image_xscale = 1;
    }
    
    instance_change(OBJ_player_char, false);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Platform Collision

// Wall
if (place_meeting(x+1, y, OBJ_collision_wall) || place_meeting(x-1, y, OBJ_collision_wall))
{
    hspeed = 0;
}

// Floor
if (place_meeting(x, y+1, OBJ_collision_floor)) 
{
    vspeed = 0;
    instance_change(OBJ_player_char, true);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Deaths

if (place_meeting(x,y,OBJ_collision_death) &amp;&amp; global.playerSuper == false &amp;&amp; global.playerBlink == false)
{
    // If not have invincibility
    if (global.powerInv == false) 
    {
        // If have a Shield
        if (global.powerShield == true) 
        {
            instance_change(OBJ_player_lost_a, true);
        }
        else
        {
            if (global.ring &gt; 0) 
            {
                instance_change(OBJ_player_lost_a, true);
            }
            else
            {
                instance_change(OBJ_player_death, true);
            }
        }
    }
}

// Outside Room
if (y &gt; room_height) 
{
    instance_change(OBJ_player_death, true);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
