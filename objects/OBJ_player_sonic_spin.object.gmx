<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SPR_player_base</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>OBJ_player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables

// Sprite speed
spriteSpeed = 0.65;

// Ramp Control
yRamp = 0;
up = 0;
down = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controls

SCR_buttons();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sprites

SCR_sprites_player_sonic();

sprite_index = SPR_player_spin;
image_speed = spriteSpeed;

// If Blink is true
if (global.playerBlink == true) 
{
    alarm[2] = 4;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spin Dash Speed

if (hspeed == 0)
{
    if (image_xscale == 1) // --&gt;
    {
        hspeed = global.playerSpinSpeed;
    }
    
    if (image_xscale == -1) // &lt;--
    {
        hspeed = -global.playerSpinSpeed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Blink Off

if (global.playerBlink == true) 
{
    image_alpha = 0.6;
    alarm[1] = 4;
}
else
{
    image_alpha = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Blink On

image_alpha = 0;
alarm[2] = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controls

// Keyboard and Gamepads buttons map
SCR_buttons();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gravity 

SCR_physics();

if (place_free(x, y+1)) 
{
    gravity = global.valGravity;
}
else 
{
    gravity = 0;
}

// Maximum fall height
if (vspeed &gt; global.valVspeed) 
{
    vspeed = global.valVspeed;
}

// Maximum spin speed
if (hspeed &gt; 15) 
{
    hspeed = 15;
}
if (hspeed &lt; -15)
{
    hspeed = -15;
}

// Ramp
SCR_physics_ramp_spin();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sprites

SCR_sprites_player_sonic();

// Speed
if (hspeed &gt; 0 &amp;&amp; hspeed &gt; 7 || hspeed &lt; 0 &amp;&amp; hspeed &lt; -7) 
{
    spriteSpeed = 0.8;
}
if (hspeed &gt; 0 &amp;&amp; hspeed &lt; 8 || hspeed &lt; 0 &amp;&amp; hspeed &gt; -8) 
{
    spriteSpeed = 0.7;
}
if (hspeed &gt; 0 &amp;&amp; hspeed &lt; 7 || hspeed &lt; 0 &amp;&amp; hspeed &gt; -7) 
{
    spriteSpeed = 0.6;
}
if (hspeed &gt; 0 &amp;&amp; hspeed &lt; 6 || hspeed &lt; 0 &amp;&amp; hspeed &gt; -6) 
{
    spriteSpeed = 0.5;
}

// Sprite
sprite_index = SPR_player_spin;
image_speed = spriteSpeed;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Moves

// --&gt;
if (image_xscale == 1) 
{   
    // Moves
    hspeed -= global.valSpeed;
    if (hspeed &lt;= 0) 
    {
        hspeed = 0;
        instance_change(OBJ_player_sonic,true);
    }
    
    // Hold
    if (global.btLeftPress)
    {
        hspeed = hspeed/5;
    }
}

// &lt;--
if (image_xscale == -1) 
{
    // Moves
    hspeed += global.valSpeed;
    if (hspeed &gt;= 0) 
    {
        hspeed = 0;
        instance_change(OBJ_player_sonic,true);
    }
    
    // Hold
    if (global.btRightPress)
    {
        hspeed = hspeed/5;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Jump

if (global.btSpaceRel &amp;&amp; vspeed &lt; 0) 
{
    vspeed *= 0.5;
}

if (global.btSpacePress &amp;&amp; global.playerJump == false)
{
    // Music
    if (global.music == 1) 
    {
        audio_play_sound(SFX_sonic_jump, 10, false);
    }
    
    // Action
    vspeed = -global.valJumpMax;
    global.playerJump = true;
    instance_change (OBJ_player_sonic,false);
    
    if (image_xscale == -1) 
    {
        with(OBJ_player_sonic) 
        {
            releasedLeft = true;
        }
    }
    
    if (image_xscale == 1) 
    {
        with(OBJ_player_sonic) 
        {
            releasedRight = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Pressure

if (y &gt; y+1)
{
    hspeed += 1.1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collision Platforms

// Floor
if (!place_free(x+hspeed, y+vspeed) &amp;&amp; !place_meeting(x+hspeed, y, OBJ_collision_wall))
{
    vspeed = 0;
    global.playerJump = false;
    global.playerJumpSpring = false;
}
// Floor + Wall
if (!place_free(x, y+vspeed) &amp;&amp; place_meeting(x+hspeed, y, OBJ_collision_wall))
{
    vspeed = 0;
    global.playerJump = false;
    global.playerJumpSpring = false;
}

// Wall
if (place_meeting(x+hspeed, y, OBJ_collision_wall) &amp;&amp; !place_meeting(x+hspeed, y, OBJ_collision_roof))
{
    if (speed &gt; 0) 
    {
        hspeed -= hspeed;
        hspeed = 0;
    }
}

// Roof
if (place_meeting(x, y+vspeed/2, OBJ_collision_roof) &amp;&amp; !place_meeting(x+hspeed, y, OBJ_collision_wall))
{
    while (vspeed &lt; 0) 
    {
        vspeed = 0;
    }
}
// Roof wall
if (place_meeting(x+hspeed, y, OBJ_collision_roof))
{
    if (speed &gt; 0) 
    {
        hspeed -= hspeed;
    }
    gravity = global.valGravity*1.5;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Margin

// View
if (x-9+hspeed &lt; view_xview[0] || x+6+hspeed &gt; view_xview[0]+view_wview[0])
{   
    hspeed = 0;
}

// Room
if (x+9+hspeed &lt;= 9 || x+hspeed &gt;= room_width-9)
{
    hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Deaths

if (place_meeting(x,y,OBJ_collision_death) &amp;&amp; global.superSonic == false &amp;&amp; global.playerBlink == false)
{
    // If not have invincibility
    if (global.powerInv == false) 
    {
        // If have a Shield
        if (global.powerShield == true) 
        {
            instance_change(OBJ_player_sonic_lost_a, true);
        }
        else
        {
            if (global.ring &gt; 0) 
            {
                instance_change(OBJ_player_sonic_lost_a, true);
            }
            else
            {
                instance_change(OBJ_player_sonic_death, true);
            }
        }
    }
}

// Outside Room
if (y &gt; room_height) 
{
    instance_change(OBJ_player_sonic_death, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
