<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SPR_player_mask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>OBJ_player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables

// Sprites Control
playerImaStop = 0 //0 = stop, 1 = waiting, 2 = up, 3 = down
okStop = true; // Don't repeat the sprite waiting
speed_spr = 0; // Sprite speed (frames)

// Jump Control
global.playerJump = false;
global.playerJumpSpring = false;

// Fly Control
playerFly = false; //se player ta voando
timeFly = true; //se ainda pode voar (tempo)

// Spin Dash Control
global.playerSpinDash = false;
spinSpeed = 0;
spinSfx = 1;
spinSpr = 0.4;

// Moves Control
playerBreakL = false;
playerBreakR = false;
okBreak = true; // Don't looping break sound fx
releasedLeft = false;
releasedRight = false;

// Ramp Control
yRamp = 0;
up = 0;
down = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controls

SCR_buttons();
SCR_player_sprites();

if (global.playerBlink == true) 
{
    alarm[2] = 4;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Blink Off

if (global.playerBlink == true) 
{
    image_alpha = 0.6;
    alarm[1] = 4;
}
else
{
    image_alpha = 1;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Blink On

image_alpha = 0;
alarm[2] = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Waiting

if (sprite_index == SPR_player_stop)
{
    playerImaStop = 1;
}
else
{
    playerImaStop = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sprites

SCR_player_sprites();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>PS. Don't change the order</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controls and Gravity

// Keyboard and Gamepads buttons map
SCR_buttons();

// Gravity
SCR_physics();
SCR_physics_ramp();

if (place_free(x, y+1)) 
{
    gravity = global.valGravity;
}
else 
{
    gravity = 0;
}

// Maximum fall height
if (vspeed &gt; global.valVspeed) 
{
    vspeed = global.valVspeed;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stop

if (hspeed == 0 &amp;&amp; global.playerJump == false)
{
    if (global.btUp) 
    {
        playerImaStop = 2;
    }
    if (global.btDown) 
    {
        playerImaStop = 3;
    }
    if (global.btUpRel || global.btDownRel) 
    {
        playerImaStop = 0;
        okStop = true;
    }
    
    // Stop on floor
    if (playerImaStop == 0 &amp;&amp; gravity == 0) 
    {
        sprite_index = SPR_player_stop;
        image_speed = 0.3;
    }
    // Falling Down air
    if (playerImaStop == 0 &amp;&amp; gravity == global.valGravity) 
    {
        sprite_index = SPR_player_walk;
        image_speed = 0.4;
    }
    // Time to waiting 
    if (playerImaStop == 0 &amp;&amp; okStop == true) 
    {
        alarm[0] = 120; 
        okStop = false;
    }
    // Waiting
    if (playerImaStop == 1) 
    {
        sprite_index = SPR_player_wait;
        if (image_index &gt;= 3)
        {
            image_index = 1;
        }
        image_speed = 0.15;
    }
    // Looking up
    if (playerImaStop == 2) 
    {
        sprite_index = SPR_player_up;
        image_speed = 0.3;
    }
    // Lowered
    if (playerImaStop == 3 &amp;&amp; global.playerSpinDash == false) 
    {
        sprite_index = SPR_player_down;
        image_speed = 0.3;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Moves

// Left &lt;--
if (global.btLeft &amp;&amp; !global.btRight)
{
    if (hspeed &gt; -1 &amp;&amp; hspeed &lt; 4) 
    {
        hspeed = 0;
    }
    if (hspeed &gt; -1 &amp;&amp; hspeed &gt; 3) 
    {
        playerBreakL = true;
    }
    if (hspeed == 0) 
    {
        hspeed = -1.1;
    }
    if (hspeed &gt; -global.valSpeedMax &amp;&amp; hspeed &lt; 1) 
    {
        hspeed -= global.valSpeed;
        image_xscale = -1;
        releasedLeft = false;
    }
}
if (global.btLeftRel &amp;&amp; playerBreakL == false)
{
    releasedLeft = true;
}

// Right --&gt;
if (global.btRight &amp;&amp; !global.btLeft)
{
    if (hspeed &lt; -1 &amp;&amp; hspeed &gt; -4) 
    {
        hspeed = 0;
    }
    if (hspeed &lt; -1 &amp;&amp; hspeed &lt; -3) 
    {
        playerBreakR = true;
    }
    if (hspeed == 0) 
    {
        hspeed = 1.1;
    }
    if (hspeed &gt; -1 &amp;&amp; hspeed &lt; global.valSpeedMax) 
    {
        hspeed += global.valSpeed;
        image_xscale = 1;
        releasedRight = false;
    }
}
if (global.btRightRel &amp;&amp; playerBreakR == false )
{
    releasedRight = true;
}

// Speed Control
SCR_physics_speed();

// Break Control
if (global.playerJump == true) 
{
    SCR_physics_break_jump();
}
else 
{
    SCR_physics_break();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collision Monitors

// Wall
if (place_meeting(x+hspeed, y, OBJ_monitors) &amp;&amp; global.playerJump == false &amp;&amp; 
    global.playerSpinDash == false)
{
    while (hspeed != 0) 
    {
        hspeed = 0;
    }
    playerImaStop = 0;
    okStop = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spin Dash

if (hspeed &gt; -1 &amp;&amp; hspeed &lt; 1 &amp;&amp; global.playerJump == false)
{
    //---------- Controls -------------//
    
    // SFX speed
    if (spinSpeed &gt; 12) 
    {
        spinSfx = 4.5;
    }
    if (spinSpeed &lt; 13) 
    {
        spinSfx = 3.6;
    }
    if (spinSpeed &lt; 12) 
    {
        spinSfx = 2.7;
    }
    if (spinSpeed &lt; 10) 
    {
        spinSfx = 2;
    }
    if (spinSpeed &lt; 9) 
    {
        spinSfx = 1.8;
    }
    
    // Speed
    if (spinSpeed &gt; 15) 
    {
        spinSpeed = 15;
    }
    if (spinSpeed &lt; 1) 
    {
        spinSpeed = 0;
    }
    
    // Sprite
    if (spinSpeed &gt; 11) 
    {
        spinSpr = 0.7;
    }
    if (spinSpeed &lt; 12) 
    {
        spinSpr = 0.5;
    }
    if (spinSpeed &lt; 8) 
    {
        spinSpr = 0.4;
    }
    
    //-------------- Action --------------//

    // Activate Spin Dash
    if (global.btDown &amp;&amp; global.btSpacePress &amp;&amp; global.playerSpinDash == false)
    {
        global.playerSpinDash = true;
        sprite_index = SPR_player_spin_dash;
        image_speed = spinSpr;
        spinSpeed = 8;
    }
    
    // More Speed
    if (global.btSpacePress &amp;&amp; global.playerSpinDash == true)
    {
        spinSpeed += 1;
        image_speed = spinSpr;
        if (global.music == 1)
        {
            audio_stop_sound(SFX_sonic_spin);
            audio_play_sound(SFX_sonic_spin, 10, false);
            audio_sound_pitch(SFX_sonic_spin, spinSfx);
        }
    }
    
    // Released
    if (global.playerSpinDash == true &amp;&amp; global.btDownRel)
    {
        global.playerSpinDash = false;
        global.valSpinSpeed = spinSpeed;
        spinSpeed = 0;
        if (global.music == 1)
        {
            audio_stop_sound(SFX_sonic_spin);
            audio_play_sound(SFX_sonic_spin_dash, 11, false);
            audio_sound_pitch(SFX_sonic_spin, 1); // Reset audio speed
        }
        instance_change(OBJ_player_char_spin,true);
    }
}

// Pressed another button
if (global.playerSpinDash == true &amp;&amp; global.btLeftPress ||
    global.btRightPress || global.btUpPress)
{
    global.playerSpinDash = false;
    spinSpeed = 0;
    audio_sound_pitch(SFX_sonic_spin, 1); // Reset audio speed
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spin Attack

if (hspeed &gt; 1 || hspeed &lt; -1)
{
    if (global.playerJump == false &amp;&amp; global.btDownPress)
    {
        if (global.music == 1)
        {
            audio_stop_sound(SFX_sonic_spin);
            audio_play_sound(SFX_sonic_spin, 10, false);
        }
        instance_change(OBJ_player_char_spin,true);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Super

// Activate
if (global.btSpacePress &amp;&amp; global.playerJump == true &amp;&amp; 
    global.ring &gt; 49 &amp;&amp; global.chaoEmerald == 7 &amp;&amp; 
    global.playerSuper == false &amp;&amp; !gravity == 0)
{
    instance_change(OBJ_player_super_transform, true);
    exit;
}

// Stars Effect
if ((hspeed &gt; 0 &amp;&amp; hspeed &gt; 6 || hspeed &lt; 0 &amp;&amp; hspeed &lt; -6) &amp;&amp; global.playerSuper == true)
{
    if !(instance_exists(OBJ_power_super_stars))
    {
        instance_create(choose(x-12,x-6,x+6,x+12), y-10, OBJ_power_super_stars);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Fly and Climbing


// ----------- Tails -----------------

if (global.player == 2)
{
    // Fly
    if (global.btSpacePress &amp;&amp; global.playerJump == true &amp;&amp;
        global.playerFly == false &amp;&amp; timeFly == true)
    {
        // Action
        global.playerBlink = false;
        global.playerFly = true;
        
        vspeed = 0;
        
        // Sprite
        sprite_index = SPR_player_fly;
        image_speed = 0.65;
        
        // Countdown
        timeline_index = TIME_tails_fly;
        timeline_running = true;
        timeline_position = 0;
        timeline_loop = false;
    }
    
    // More speed
    if (global.btSpacePress &amp;&amp; global.playerFly == true &amp;&amp; y &gt; 50)
    {
        vspeed -= 3;
    }
}


// ----------- Knuckles -----------------

if (global.player == 3)
{
    // Fly
    if (global.playerFly == false &amp;&amp; global.btSpacePress &amp;&amp; 
        global.playerJump == true &amp;&amp; global.playerJumpSpring == false)
    {
        // Action
        global.playerBlink = false;
        global.playerFly = true;
        
        vspeed = 0;
        hspeed = 0;
        
        if (image_xscale == 1) 
        {
            hspeed = 8;
        }
        if (image_xscale == -1) 
        {
            hspeed = -8;
        }
        
        // Sprite
        sprite_index = SPR_player_fly;
        image_speed = 0.65;
    }
    
    // Climbing
    if (place_meeting(x+hspeed, y, OBJ_collision_wall) &amp;&amp; global.playerFly == true)
    {
        instance_change(OBJ_player_climbing, true);
    }
}


// ------------ Cancel Fly ----------

if (global.btDownPress &amp;&amp; global.playerFly == true)
{
    global.playerFly = false;
    timeFly = false;
    timeline_index = TIME_tails_fly;
    timeline_running = false;
    timeline_position = 0;
    hspeed = 0;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Jump Flame - Shield

if (global.btSpacePress &amp;&amp; global.playerJump == true &amp;&amp; global.playerJumpSpring == false &amp;&amp;
    global.playerFly == false &amp;&amp; global.powerShieldFlame == true &amp;&amp; global.player == 1)
{
    // Start variables
    global.playerBlink = false;
    global.playerFly = true;
    
    // Stop moves
    vspeed = 0;
    hspeed = 0;
    
    // Direction..
    if (image_xscale == 1) 
    {
        hspeed = hspeed+global.valJumpMax;
        releasedRight = true;
    }
    if (image_xscale == -1) 
    {
        hspeed = -hspeed-global.valJumpMax;
        releasedLeft = true;
    }
    
    // Sprite
    sprite_index = SPR_player_spin;
    image_speed = 0.65;
    
    // Fire effect
    instance_create(x, y, OBJ_power_shield_flame_jump);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Jump

if (global.btSpaceRel &amp;&amp; vspeed &lt; 0 &amp;&amp; global.playerSpinDash == false &amp;&amp; 
    global.playerJumpSpring == false) 
{
    vspeed *= 0.5;
}

if (global.btSpacePress &amp;&amp; global.playerJump == false &amp;&amp; global.playerJumpSpring == false &amp;&amp; 
    global.playerSpinDash == false &amp;&amp; global.playerFly == false)
{
    // Sprite
    sprite_index = SPR_player_spin;
    image_speed = 0.65;
    
    // SFX
    if (global.music == 1) 
    {
        audio_play_sound(SFX_sonic_jump, 10, false);
    }
    
    // Action
    vspeed = -global.valJumpMax;
    global.playerJump = true;
    playerImaStop = 0;
    okStop = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collision Platforms

// ----------- Floor ---------------

if ((!place_free(x+hspeed, y+vspeed) &amp;&amp; !place_meeting(x+hspeed, y, OBJ_collision_wall)) || // Floor
    (!place_free(x, y+vspeed) &amp;&amp; place_meeting(x+hspeed, y, OBJ_collision_wall))) // Floor + Wall
{
    vspeed = 0;
    global.playerJump = false;
    global.playerJumpSpring = false;
    
    // Stop fly
    if (global.player == 3 &amp;&amp; global.playerFly == true) 
    {
        //Only Knuckles
        while (hspeed != 0) 
        {
            hspeed = 0;
        }
    }
    global.playerFly = false;
    timeFly = true;
}


// ----------- Wall ---------------
    
if (place_meeting(x+hspeed, y, OBJ_collision_wall))
{
    while (hspeed != 0) 
    {
        hspeed = 0;
    }
    playerImaStop = 0;
    okStop = false;
}
    
    
// ----------- Roof ---------------
    
if (place_meeting(x, y+vspeed/2, OBJ_collision_roof))
{
    while (vspeed &lt; 0) 
    {
        vspeed = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Margin

// View
if (x-9+hspeed &lt; view_xview[0] || x+6+hspeed &gt; view_xview[0]+view_wview[0])
{   
    hspeed = 0;
}

// Room
if (x+9+hspeed &lt;= 9 || x+hspeed &gt;= room_width-9)
{
    hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Deaths

if (place_meeting(x,y,OBJ_collision_death) &amp;&amp; global.playerSuper == false &amp;&amp; global.playerBlink == false)
{
    // If not have invincibility
    if (global.powerInv == false) 
    {
        // If have a Shield
        if (global.powerShield == true) 
        {
            instance_change(OBJ_player_lost_a, true);
        }
        else
        {
            if (global.ring &gt; 0) 
            {
                instance_change(OBJ_player_lost_a, true);
            }
            else
            {
                instance_change(OBJ_player_death, true);
            }
        }
    }
}

// Outside Room
if (y &gt; room_height) 
{
    instance_change(OBJ_player_death, true);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Deaths Badniks

if (place_meeting(x,y,OBJ_badniks) &amp;&amp; global.playerSuper == false &amp;&amp; 
    global.playerJump == false &amp;&amp; global.playerSpinDash == false &amp;&amp;
    global.playerBlink == false)
{
    // If not have invincibility
    if (global.powerInv == false) 
    {
        // If have a Shield
        if (global.powerShield == true) 
        {
            instance_change(OBJ_player_lost_a, true);
        }
        else
        {
            if (global.ring &gt; 0) 
            {
                instance_change(OBJ_player_lost_a, true);
            }
            else
            {
                instance_change(OBJ_player_death, true);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change Playaer (Debug)

if (global.player &lt; 3)
{
    global.player++;
}
else
{
   global.player = 1; 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
