<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SPR_sonic_falling</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>OBJ_player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables

// Speed of direction
velo = 0.4;

// Reset player speed
hspeed = 0;

// Opacity
alpha = 0.6;

// Blink
alarm[1] = 2;
global.playerBlink = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controls 

SCR_sprites_player_sonic();
SCR_physics();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Direction and Jump

// Direction
if (image_xscale == 1) // &lt;--
{
    hspeed = -velo;
}
if (image_xscale == -1) // --&gt;
{
    hspeed = velo;
}

// Jump
vspeed = -global.valSpeedMax*1.2;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Music

if (global.music == 1)
{
    audio_play_sound(SFX_sonic_lost_rings, 10, false);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// If Shield is true

if (global.powerShield == false)
{
    instance_create(x,y, OBJ_player_sonic_lost_b);
}

if (global.powerShield == true)
{
    global.powerShield = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Blink (on)

alpha = 0.6;
alarm[1] = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Blink (off)

alpha = 0;
alarm[2] = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sprites

SCR_sprites_player_sonic();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Physics

SCR_physics();

// Gravity
gravity = global.valGravity;

if (vspeed &gt; global.valVspeed)
{
    vspeed = global.valVspeed;
}

// Direction

// If place free is true, throw me back
if (place_free(x, y+1))
{
    if (velo &lt;= 1.1)
    {
        velo = 1.1;
        if (image_xscale == 1) 
        {
            hspeed = -velo;
        }
        if (image_xscale == -1) 
        {
            hspeed = velo;
        }
    }
}
// If floor collision is true, stop me
else
{
    if (velo &lt;= 1.1)
    {
        velo = 0; 
        hspeed = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move Speed

if (velo &gt; 0)
{
    velo -= 0.02;
    if (image_xscale == 1) 
    {
        hspeed += -velo;
    }
    if (image_xscale == -1) 
    {
        hspeed += velo;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collision Platforms

// Floor
if (!place_free(x+hspeed, y+vspeed) &amp;&amp; !place_meeting(x+hspeed, y, OBJ_collision_wall))
{
    vspeed = 0;
    if (hspeed = 0)
    {
        timeline_index = TIME_player_blink;
        timeline_position = 0;
        timeline_running = true;
        timeline_loop = false;
        instance_change(OBJ_player_sonic, true);
    }
}
// Floor + Wall
if (!place_free(x, y+vspeed) &amp;&amp; place_meeting(x+hspeed, y, OBJ_collision_wall))
{
    vspeed = 0;
    if (hspeed = 0)
    {
        timeline_index = TIME_player_blink;
        timeline_position = 0;
        timeline_running = true;
        timeline_loop = false;
        instance_change(OBJ_player_sonic, true);
    }
}

// Wall
if (place_meeting(x+hspeed, y, OBJ_collision_wall) &amp;&amp; !place_meeting(x+hspeed, y, OBJ_collision_roof))
{
    if (speed &gt; 0) 
    {
        hspeed -= hspeed; velo -= velo;
    }
}

// Roof
if (place_meeting(x, y+vspeed/2, OBJ_collision_roof) &amp;&amp; !place_meeting(x+hspeed, y, OBJ_collision_wall))
{
    if (speed &gt; 0) 
    {
        vspeed -= vspeed/2;
    }
}
// Roof wall
if (place_meeting(x+hspeed, y, OBJ_collision_roof))
{
    if (speed &gt; 0) 
    {
        hspeed -= hspeed; velo -= velo;
    }
    gravity = 1.5;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collision Monitors

// Floor
if (place_meeting(x+hspeed, y, OBJ_monitors))
{
    vspeed = 0;
}

// Wall
if (place_meeting(x+hspeed, y, OBJ_monitors))
{
    if (speed &gt; 0) {hspeed -= hspeed; velo -= velo;}
}

// Roof
if (place_meeting(x, y-22, OBJ_monitors))
{
    if (speed &gt; 0) {vspeed -= vspeed/2;}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Margin

//View
if (x-9+hspeed &lt; view_xview[0] || x+6+hspeed &gt; view_xview[0]+view_wview[0])
{   
    hspeed = 0;
    velo = 0;
}

//Room
if (x+9+hspeed &lt;= 9 || x+hspeed &gt;= room_width-9)
{
    hspeed = 0;
    velo = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Outside room

if (y &gt; room_height) 
{
    instance_change(OBJ_player_sonic_death, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sprite

draw_sprite_ext(SPR_player_falling,-1,x,y,image_xscale,1,0,c_white,alpha);
image_speed = 0.3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>50,50</point>
  </PhysicsShapePoints>
</object>
